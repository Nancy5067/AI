import pandas as pd
#selecting only latitude, median_house_value from all the columns
home_data = pd.read_csv(r"C:\Users\Khansa\Downloads\housing.csv", usecols =['longitude','latitude','median_house_value'])
home_data.head()

import seaborn as sns
#Shows the actual map with the help of latitude and longitude
#colored datapoint w.r.t long and lat(which shows house near ocean is expensive)
sns.scatterplot(data =home_data, x = 'longitude', y='latitude', hue = 'median_house_value')

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(home_data[['latitude','longitude']], home_data[['median_house_value']],test_size =0.33, random_state=0)

from sklearn import preprocessing
#normalizing the data
x_train_norm = preprocessing.normalize(x_train)
x_test_norm = preprocessing.normalize(x_test)

from sklearn.cluster import KMeans
#making cluster of 3
kmeans = KMeans(n_clusters =3, n_init='auto', random_state =0)
kmeans.fit(x_train_norm)

sns.scatterplot(data =x_train, x='longitude', y ='latitude', hue =kmeans.labels_)
sns.boxplot(x=kmeans.labels_, y =y_train['median_house_value'])

from sklearn.metrics import silhouette_score
silhouette_score(x_train_norm, kmeans.labels_, metric='euclidean')

K = range(2,8)
fits=[]
score = []

for k in K: 
    #train the model for current value of k on training data
    model = KMeans(n_clusters = k, random_state = 0).fit(x_train_norm)
    
    #append the model to fits
    fits.append(model)
    #append silhouette score to scores
    score.append(silhouette_score(x_train_norm, model.labels_, metric='euclidean'))

sns.scatterplot(data= x_train, x= 'longitude', y='latitude', hue = fits[0].labels_)
sns.scatterplot(data= x_train, x= 'longitude', y='latitude', hue = fits[2].labels_)
sns.lineplot(x =K , y=score)
